// Generated by CoffeeScript 1.4.0
(function() {
  var AddTitleCntl, DashCntl, EditEventCntl, ListCntl, NewEventCntl, SelectCntl, SettingsCntl, mod, viewMod;

  angular.module("data", ["ngResource"]).factory("Event", function($resource) {
    var Event;
    Event = $resource("/data/events/:id", {
      blah: ""
    }, {
      update: {
        method: "POST"
      }
    });
    Event.prototype.update = function(cb) {
      return Event.update({
        id: this._id.$oid
      }, angular.extend({}, this, {
        _id: undefined
      }), cb);
    };
    Event.prototype.destroy = function(cb) {
      return Event.remove({
        id: this._id.$oid
      }, cb);
    };
    return Event;
  });

  window.MainCntl = function($scope, $route, $routeParams, $location, $http) {
    $scope.$route = $route;
    $scope.$location = $location;
    $scope.$routeParams = $routeParams;
    $scope.crumbs = ['/opp/addtitle=Add Title', '/opp/dash=Dashboard', '/opp/settings=Settings', '/opp/Settings=Settings', '/opp=Opportunities', '/=OARS'];
    return $scope.breadcrumb = function() {
      var i, name, parts, path, pathpart, str, _i, _len, _ref, _ref1;
      path = $scope.$location.path();
      parts = [];
      _ref = $scope.crumbs;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        str = _ref[i];
        if ((str != null) && (str != null ? str.length : void 0) > 0) {
          _ref1 = str.split('='), pathpart = _ref1[0], name = _ref1[1];
        }
        if (path.indexOf(pathpart) >= 0) {
          parts.unshift({
            path: pathpart,
            name: name
          });
        }
      }
      return parts;
    };
  };

  SelectCntl = function($scope, $routeParams, $resource) {
    $scope.$resource = $resource;
    $scope.name = "SelectCntl";
    $scope.params = $routeParams;
    return $scope.$parent.crumblinks = $scope.$parent.breadcrumb();
  };

  DashCntl = function($scope, $routeParams, $resource) {
    $scope.$resource = $resource;
    $scope.name = "DashCntl";
    $scope.params = $routeParams;
    return $scope.$parent.crumblinks = $scope.$parent.breadcrumb();
  };

  AddTitleCntl = function($scope, $routeParams) {
    $scope.name = "AddTitleCntl";
    $scope.params = $routeParams;
    return $scope.$parent.crumblinks = $scope.$parent.breadcrumb();
  };

  SettingsCntl = function($scope, $routeParams) {
    $scope.name = "SettingsCntl";
    $scope.params = $routeParams;
    return $scope.$parent.crumblinks = $scope.$parent.breadcrumb();
  };

  ListCntl = function($scope, Event) {
    return $scope.events = Event.query();
  };

  NewEventCntl = function($scope, $location, Event) {
    return $scope.save = function() {
      return Event.save($scope.event, function(event) {
        return $location.path("/opp/edit/" + event._id.$oid);
      });
    };
  };

  EditEventCntl = function($scope, $location, $routeParams, Event) {
    var self;
    self = this;
    Event.get({
      id: $routeParams.eventId
    }, function(event) {
      self.original = event;
      return $scope.event = new Event(self.original);
    });
    $scope.isClean = function() {
      return angular.equals(self.original, $scope.event);
    };
    $scope.destroy = function() {
      return self.original.destroy(function() {
        return $location.path("/opp/settings");
      });
    };
    return $scope.save = function() {
      return $scope.event.update(function() {
        return $location.path("/opp/settings");
      });
    };
  };

  mod = function($routeProvider, $locationProvider) {
    $routeProvider.when("/", {
      templateUrl: "/select.html",
      controller: SelectCntl
    });
    $routeProvider.when("/opp/dash", {
      templateUrl: "/dash.html",
      controller: DashCntl
    });
    $routeProvider.when("/opp/addtitle", {
      templateUrl: "/addtitle.html",
      controller: AddTitleCntl
    });
    $routeProvider.when("/opp/settings", {
      templateUrl: "/settings.html",
      controller: SettingsCntl
    });
    $routeProvider.when("/opp/event/new", {
      templateUrl: "/eventdetail.html",
      controller: NewEventCntl
    });
    $routeProvider.when("/opp/event/edit/:eventId", {
      templateUrl: "/eventdetail.html",
      controller: EditEventCntl
    });
    return $locationProvider.html5Mode(true);
  };

  viewMod = angular.module("ngView", ["ngResource", "data"], mod);

  viewMod.directive("feed", function($resource) {
    return {
      restrict: "E",
      replace: true,
      transclude: false,
      template: "<li ng-repeat=\"article in articles\"><a href=\"{{article.link}}\" target=\"_blank\" >{{article.title}}</a></li>",
      link: function(scope, element, attrs) {
        var Feed;
        Feed = $resource("/feed/" + encodeURIComponent(attrs.url));
        return scope.articles = Feed.query({}, function() {});
      }
    };
  });

  viewMod.directive("upcoming", function($resource) {
    return {
      restrict: "E",
      replace: true,
      transclude: false,
      template: "<li ng-repeat=\"ev in evts\">{{ev.date}} {{ev.title}}</li>",
      link: function(scope, element, attrs) {
        var Upcoming;
        Upcoming = $resource("/upcoming");
        return scope.evts = Upcoming.query({
          blah: 'hello'
        }, function() {});
      }
    };
  });

  viewMod.directive('tabs', function() {
    return {
      restrict: 'E',
      transclude: true,
      scope: {},
      controller: function($scope, $element) {
        var panes;
        panes = $scope.panes = [];
        $scope.select = function(pane) {
          var p, _i, _len;
          for (_i = 0, _len = panes.length; _i < _len; _i++) {
            p = panes[_i];
            p.selected = false;
          }
          return pane.selected = true;
        };
        return this.addPane = function(pane) {
          if (panes.length === 0) {
            $scope.select(pane);
          }
          return panes.push(pane);
        };
      },
      template: "<div class=\"tabbable\">\n  <ul class=\"nav nav-tabs\">\n    <li ng-repeat=\"pane in panes\" ng-class=\"{active:pane.selected}\">\n      <a href=\"\" ng-click=\"select(pane)\">{{pane.title}}</a>\n    </li>\n  </ul>\n  <div class=\"tab-content\" ng-transclude></div>\n</div>",
      replace: true
    };
  });

  viewMod.directive('pane', function() {
    return {
      require: '^tabs',
      restrict: 'E',
      transclude: true,
      scope: {
        title: '@'
      },
      link: function(scope, element, attrs, tabsCtrl) {
        return tabsCtrl.addPane(scope);
      },
      template: '<div class="tab-pane" ng-class="{active: selected}" ng-transclude>' + '</div>',
      replace: true
    };
  });

}).call(this);
